{"moduleFile":{"sourceFilePath":"/Users/roger/Projects/design-system-team/umich-lib-basic-stencil/src/components/universal-header/universal-header.tsx","jsFilePath":"/Users/roger/Projects/design-system-team/umich-lib-basic-stencil/src/components/universal-header/universal-header.js","cmps":[{"isLegacy":false,"tagName":"umichlib-universal-header","excludeFromCollection":false,"isCollectionDependency":false,"componentClassName":"UniversalHeader","elementRef":"el","encapsulation":"none","properties":[],"virtualProperties":[],"states":[],"methods":[],"listeners":[],"events":[],"watchers":[],"styles":[{"modeName":"$","styleId":"UMICHLIB-UNIVERSAL-HEADER","styleStr":null,"styleIdentifier":null,"compiledStyleText":null,"compiledStyleTextScoped":null,"compiledStyleTextScopedCommented":null,"externalStyles":[{"absolutePath":"/Users/roger/Projects/design-system-team/umich-lib-basic-stencil/src/components/universal-header/universal-header.css","relativePath":"universal-header.css","originalComponentPath":"universal-header.css"}]}],"legacyConnect":[],"legacyContext":[],"internal":false,"assetsDirs":[],"styleDocs":[],"docs":{"tags":[],"text":""},"jsFilePath":"/Users/roger/Projects/design-system-team/umich-lib-basic-stencil/src/components/universal-header/universal-header.js","sourceFilePath":"/Users/roger/Projects/design-system-team/umich-lib-basic-stencil/src/components/universal-header/universal-header.tsx","hasAttributeChangedCallbackFn":false,"hasComponentWillLoadFn":false,"hasComponentDidLoadFn":false,"hasComponentShouldUpdateFn":false,"hasComponentWillUpdateFn":false,"hasComponentDidUpdateFn":false,"hasComponentWillRenderFn":false,"hasComponentDidRenderFn":false,"hasComponentDidUnloadFn":false,"hasConnectedCallbackFn":false,"hasDisconnectedCallbackFn":false,"hasElement":false,"hasEvent":false,"hasLifecycle":false,"hasListener":false,"hasListenerTarget":false,"hasListenerTargetWindow":false,"hasListenerTargetDocument":false,"hasListenerTargetBody":false,"hasListenerTargetParent":false,"hasMember":false,"hasMethod":false,"hasMode":false,"hasAttribute":false,"hasProp":false,"hasPropNumber":false,"hasPropBoolean":false,"hasPropString":false,"hasPropMutable":false,"hasReflect":false,"hasRenderFn":true,"hasState":false,"hasStyle":true,"hasVdomAttribute":true,"hasVdomXlink":true,"hasVdomClass":true,"hasVdomFunctional":true,"hasVdomKey":true,"hasVdomListener":true,"hasVdomRef":true,"hasVdomRender":true,"hasVdomStyle":true,"hasVdomText":true,"hasWatchCallback":false,"isPlain":false,"htmlAttrNames":["class","aria-label","href","title","onClick","aria-expanded","icon"],"htmlTagNames":["header","div","a","abbr","span","button","pre"],"isUpdateable":false,"potentialCmpRefs":[]}],"coreRuntimeApis":[],"collectionName":null,"dtsFilePath":null,"excludeFromCollection":false,"externalImports":["@stencil/core","emotion","stencil-fragment"],"hasVdomAttribute":false,"hasVdomXlink":false,"hasVdomClass":false,"hasVdomFunctional":false,"hasVdomKey":false,"hasVdomListener":false,"hasVdomRef":false,"hasVdomRender":false,"hasVdomStyle":false,"hasVdomText":false,"htmlAttrNames":[],"htmlTagNames":[],"isCollectionDependency":false,"isLegacy":false,"localImports":["/Users/roger/Projects/design-system-team/umich-lib-basic-stencil/src/shared/styles","/Users/roger/Projects/design-system-team/umich-lib-basic-stencil/src/shared/styles"],"originalCollectionComponentPath":null,"originalImports":["@stencil/core","emotion","stencil-fragment","../../shared/styles"],"potentialCmpRefs":[]},"jsText":"import { Host, h } from \"@stencil/core\";\r\nimport { css } from 'emotion';\r\nimport Fragment from 'stencil-fragment';\r\nimport { GlobalStyleSheet } from '../../shared/styles';\r\nimport { COLORS, TYPOGRAPHY, SPACING, MEDIA_QUERIES, Margins, LargeScreen, SmallScreen, LINK_STYLES, Z_SPACE, } from '../../shared/styles';\r\nexport class UniversalHeader {\r\n    constructor() {\r\n        this.isOpen = false;\r\n    }\r\n    transformData(data) {\r\n        return {\r\n            primary: data.filter(item => item.level === \"1\"),\r\n            secondary: data.filter(item => item.level === \"2\")\r\n        };\r\n    }\r\n    handleClick(event) {\r\n        // isOpen = ! isOpen;\r\n        this.isOpen = !this.isOpen;\r\n    }\r\n    render() {\r\n        let container;\r\n        let items;\r\n        let styles = { linkLink: null, container: null, content: null, headerSpan: null, sitesButton: null, sitesContainer: null, overlay: null, sitesLede: null, linksContainer: null, linkItem: null, linkDescription: null, loadingContainer: null };\r\n        let linkss = { special: null, listStrong: null };\r\n        linkss.special = css(LINK_STYLES['special']);\r\n        linkss.listStrong = css(LINK_STYLES['links-strong']);\r\n        styles.linkLink = css(Object.assign(LINK_STYLES['list-strong'], {\r\n            display: 'block',\r\n            padding: SPACING['M'],\r\n            ':hover': {\r\n                boxShadow: 'none'\r\n            },\r\n            ':hover span': LINK_STYLES['list-strong'][':hover'],\r\n            [MEDIA_QUERIES.LARGESCREEN]: {\r\n                display: 'inline',\r\n                padding: '0'\r\n            }\r\n        }));\r\n        styles.container = css({\r\n            background: COLORS.blue[100],\r\n            width: '100%'\r\n        });\r\n        styles.content = css({\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            padding: `${SPACING['2XS']} 0`\r\n        });\r\n        styles.headerSpan = css(Object.assign(Object.assign({}, TYPOGRAPHY['3XS']), { color: COLORS.neutral[300] }));\r\n        styles.sitesButton = css(Object.assign(Object.assign({}, LINK_STYLES['special']), { ':hover': {\r\n                'span': LINK_STYLES['special'][':hover']\r\n            } }));\r\n        styles.sitesContainer = css({\r\n            display: 'inline-block',\r\n            position: 'relative'\r\n        });\r\n        styles.overlay = css(Object.assign(Object.assign({ background: 'white', zIndex: '10', position: `absolute`, left: `auto`, right: `0`, marginLeft: SPACING['XL'], marginBottom: SPACING['L'], padding: '0', borderRight: '0', width: '20rem', marginRight: `-${SPACING['M']}` }, Z_SPACE[8]), { [MEDIA_QUERIES.LARGESCREEN]: {\r\n                marginRight: '0',\r\n                padding: SPACING['XL'],\r\n                width: `862px`,\r\n                maxWidth: `calc(100vw - ${SPACING['2XL']} * 2)`,\r\n            } }));\r\n        styles.sitesLede = css({\r\n            display: 'none',\r\n            [MEDIA_QUERIES.LARGESCREEN]: Object.assign(Object.assign({ display: 'block' }, TYPOGRAPHY['L']), { padding: 0, marginBottom: SPACING['L'] })\r\n        });\r\n        styles.linksContainer = css({\r\n            [MEDIA_QUERIES.LARGESCREEN]: {\r\n                'ul:first-of-type': {\r\n                    marginBottom: SPACING['M']\r\n                },\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                'ul:last-of-type': {\r\n                    minWidth: '16rem',\r\n                    margin: '0',\r\n                    marginLeft: SPACING['XL'],\r\n                    paddingLeft: SPACING['XL'],\r\n                    borderLeft: `solid 1px ${COLORS.neutral[100]}`,\r\n                    'li': {\r\n                        marginBottom: SPACING['S'],\r\n                    }\r\n                }\r\n            },\r\n            'ul:last-of-type li:last-of-type': {\r\n                border: 'none'\r\n            }\r\n        });\r\n        styles.linkItem = css({\r\n            borderBottom: `solid 1px ${COLORS.neutral[100]}`,\r\n            [MEDIA_QUERIES.LARGESCREEN]: {\r\n                border: 'none',\r\n                position: 'relative',\r\n                maxWidth: '32rem',\r\n                ':not(:last-child)': {\r\n                    marginBottom: '1rem'\r\n                }\r\n            }\r\n        });\r\n        styles.linkDescription = css({\r\n            display: 'none',\r\n            color: COLORS.neutral['300'],\r\n            [MEDIA_QUERIES.LARGESCREEN]: {\r\n                display: 'block'\r\n            }\r\n        });\r\n        styles.loadingContainer = css({\r\n            borderBottom: `solid 1px ${COLORS.neutral[100]}`,\r\n            [MEDIA_QUERIES.LARGESCREEN]: {\r\n                border: 'none',\r\n                position: 'relative',\r\n                maxWidth: '32rem',\r\n                ':not(:last-child)': {\r\n                    marginBottom: '1rem'\r\n                }\r\n            }\r\n        });\r\n        GlobalStyleSheet();\r\n        function HeaderContainer(props, children) {\r\n            console.log(\"AHOY ARGUMENTS\", arguments);\r\n            return (h(\"header\", { class: styles.container, \"aria-label\": \"WHAT IS EVEN HAPPENING?\" }, children));\r\n        }\r\n        function HeaderContent() {\r\n            return (h(\"div\", { class: styles.content }, arguments[1]));\r\n        }\r\n        function HeaderMargins() {\r\n            return (h(\"div\", { class: Margins }, arguments[1]));\r\n        }\r\n        function UMichLibraryLink() {\r\n            //LINK_STYLES\r\n            return (h(Fragment, null,\r\n                h(\"div\", { class: LargeScreen },\r\n                    h(\"a\", { class: linkss.special, href: \"https://www.lib.umich.edu/\" }, \"University of Michigan Library\")),\r\n                h(\"div\", { class: SmallScreen },\r\n                    h(\"a\", { class: linkss.special, href: \"https://www.lib.umich.edu/\" },\r\n                        h(\"abbr\", { title: \"University of Michigan\" }, \"U-M\"),\r\n                        \" Library\"))));\r\n        }\r\n        function Icon(props, children) {\r\n            return (h(\"span\", Object.assign({}, props)));\r\n        }\r\n        function HeaderText(props, children) {\r\n            return (h(\"span\", { class: styles.headerSpan }, children));\r\n        }\r\n        function SitesButton(props, children) {\r\n            return (h(React.Fragment, null,\r\n                h(\"button\", Object.assign({ class: styles.sitesButton }, props), children),\r\n                h(\"pre\", null, JSON.stringify(props)),\r\n                h(React.Fragment, null,\r\n                    \") } function SitesContainer(props, children) \",\r\n                ,\r\n                    \"return (\",\r\n                    h(\"div\", { class: styles.sitesContainer }, children),\r\n                    \") } function Sites() \",\r\n                // this is where all the voodoo goes\r\n                ,\r\n                    \"// this is where all the voodoo goes return (\",\r\n                    h(SitesContainer, null,\r\n                        h(SitesButton, { onClick: () => this.handleClick(), \"aria-expanded\": open },\r\n                            h(HeaderText, null, \"Explore\"),\r\n                            \" \",\r\n                            h(Icon, { icon: \"expand_more\" }))),\r\n                    \"); } // return ( //   \",\r\n                    h(\"header\", { class: styles.container, \"aria-label\": \"View our other U-M Library sites\" },\r\n                        \"//     \",\r\n                        h(UMichLibraryLink, null)\r\n                    //   </header>\r\n                    // );\r\n                    ,\r\n                        \"//   \")\r\n                // );\r\n                ,\r\n                    \"// ); return (\",\r\n                    h(HeaderContainer, { \"aria-label\": \"View our other U-M Library sites\" },\r\n                        h(HeaderMargins, null,\r\n                            h(HeaderContent, null,\r\n                                h(UMichLibraryLink, null),\r\n                                h(Sites, null)))),\r\n                    \") } }\")));\r\n        }\r\n    }\r\n    static get is() { return \"umichlib-universal-header\"; }\r\n    static get originalStyleUrls() { return {\r\n        \"$\": [\"universal-header.css\"]\r\n    }; }\r\n    static get styleUrls() { return {\r\n        \"$\": [\"universal-header.css\"]\r\n    }; }\r\n    static get elementRef() { return \"el\"; }\r\n}\r\n"}